version: 0.2

env:
  variables:
    IMAGE_TAG: "latest"
    ECR_REPO_NAME: "brain-tasks-app"
    AWS_REGION: "ap-south-1"
    ACCOUNT_ID: "288206953113"

phases:
  install:
    runtime-versions:
      docker: 20
    commands:
      - echo "Installing kubectl..."
      - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - chmod +x kubectl
      - mv kubectl /usr/local/bin/kubectl
      - echo "Logging in to Amazon ECR..."
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com

  pre_build:
    commands:
      - echo "Generating kubeconfig from EKS..."
      - aws eks update-kubeconfig --region $AWS_REGION --name brain-tasks-cluster
      - echo "Setting up ECR repository..."
      - aws ecr describe-repositories --repository-names $ECR_REPO_NAME || aws ecr create-repository --repository-name $ECR_REPO_NAME
      - REPO_URI="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}"
      - echo "Building Docker image..."
      - docker build -t $ECR_REPO_NAME .
      - docker tag $ECR_REPO_NAME:latest $REPO_URI:$IMAGE_TAG

  build:
    commands:
      - echo "Pushing Docker image to ECR..."
      - docker push $REPO_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo "Deploying to EKS..."
      - kubectl apply --dry-run=client -f k8s/   # optional check
      - kubectl apply -f k8s/deployment.yaml
      - kubectl apply -f k8s/service.yaml
      - echo "Deployment complete."

artifacts:
  files:
    - '**/*'
