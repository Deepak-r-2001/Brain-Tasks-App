version: 0.2

env:
  variables:
    AWS_REGION: ap-south-1
  parameter-store:
    REPOSITORY_URI: "/brain-tasks/repo-uri"
    IMAGE_TAG: "/brain-tasks/image-tag"
    EKS_CLUSTER_NAME: "/brain-tasks/eks-cluster-name"
    EKS_CLUSTER_ENDPOINT: "/brain-tasks/eks-cluster-endpoint"
    EKS_CLUSTER_CA: "/brain-tasks/eks-cluster-ca"

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI

  pre_build:
    commands:
      - echo Installing dependencies...
      - npm install

  build:
    commands:
      - echo Building Docker image...
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest

  post_build:
    commands:
      - echo Pushing Docker image to ECR...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest

      - echo Setting up kubeconfig for EKS...
      - mkdir -p ~/.kube
      - |
        cat <<EOF > ~/.kube/config
        apiVersion: v1
        clusters:
        - cluster:
            server: ${EKS_CLUSTER_ENDPOINT}
            certificate-authority-data: ${EKS_CLUSTER_CA}
          name: ${EKS_CLUSTER_NAME}
        contexts:
        - context:
            cluster: ${EKS_CLUSTER_NAME}
            user: aws
          name: ${EKS_CLUSTER_NAME}
        current-context: ${EKS_CLUSTER_NAME}
        kind: Config
        preferences: {}
        users:
        - name: aws
          user:
            exec:
              apiVersion: client.authentication.k8s.io/v1beta1
              command: aws
              args:
                - "eks"
                - "get-token"
                - "--region"
                - "${AWS_REGION}"
                - "--cluster-name"
                - "${EKS_CLUSTER_NAME}"
        EOF

      - echo Deploying to EKS...
      - kubectl apply -f k8s/deployment.yaml
      - kubectl apply -f k8s/service.yaml

artifacts:
  files:
    - '**/*'
